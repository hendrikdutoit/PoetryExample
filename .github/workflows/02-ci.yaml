name: CI

on:
  workflow_call:

jobs:
  CI:
    runs-on: ${{matrix.os}}
    env:
      GH_REPO_ACCESS_BY_OWN_APPS: ${{ secrets.GH_REPO_ACCESS_BY_OWN_APPS }}
      VENV_ENVIRONMENT: ${{vars.VENV_ENVIRONMENT}}

    strategy:
      fail-fast: true
      matrix:
        #        python-version: ['3.8', '3.9', '3.10', '3.11']
        python-version: [ '3.13' ]
        #        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        os: [ 'ubuntu-latest' ]

    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Configure Poetry
        run: |
          poetry config keyring.enabled false
          # poetry config http-basic.github.com x-access-token ${{ secrets.GH_REPO_ACCESS_BY_OWN_APPS }}
          poetry config http-basic.PoetryPrivate __token__ ${{ secrets.GH_REPO_ACCESS_CURR_USER }}
          poetry source add --priority=explicit PoetryPrivate https://github.com/BrightEdgeeServices/PoetryPrivate.git
          poetry add git+https://github.com/BrightEdgeeServices/PoetryPrivate.git

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Run pytest with coverage
        run: |
          poetry run pytest --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN_MASTER }}
          slug: hendrikdutoit/PoetryExample
